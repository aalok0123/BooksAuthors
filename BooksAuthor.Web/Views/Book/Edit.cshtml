@using BooksAuthors.ViewModel;
@model BooksAuthors.ViewModel.BookViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>BookViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Book_Id" class="form-control" type="hidden" />

            <div class="form-group">
                <label asp-for="Book_Title" class="control-label"></label>
                <input asp-for="Book_Title" class="form-control" />
                <span asp-validation-for="Book_Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AuthorId" class="control-label"></label>
                <select asp-for="SelectedAuthor" multiple>

                    @foreach (AuthorViewModel item in Model.Authors)
                    {
                        if (Model.SelectedAuthor.Any(x => x == item.Author_id))
                        {
                            <option selected value="@item.Author_id">@item.First_Name</option>
                        }
                        else
                        {
                            <option value="@item.Author_id">@item.First_Name</option>
                        }
                    }

                </select>

                <span asp-validation-for="Book_Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
